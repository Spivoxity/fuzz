%
% test2.in
%
% This file is part of fuzz2000
% Copyright (c) 1982--2006 J. M. Spivey
% All rights reserved
%
% Redistribution and use in source and binary forms, with or without
% modification, are permitted provided that the following conditions are met:
%
% 1. Redistributions of source code must retain the above copyright notice,
%    this list of conditions and the following disclaimer.
% 2. Redistributions in binary form must reproduce the above copyright notice,
%    this list of conditions and the following disclaimer in the documentation
%    and/or other materials provided with the distribution.
% 3. The name of the author may not be used to endorse or promote products
%    derived from this software without specific prior written permission.
%
% THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
% IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
% OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
% IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
% SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
% PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
% OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
% WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
% OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
% ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
% 
% $Id: test2.in,v 1.2 2007-02-16 13:22:02 mike Exp $
%

\begin{zed}
\t0	\forall DISK\_POOL: \nat @
\t1		"DISK\_POOL" = 0
\end{zed}

\begin{zed} (3 + 4 = 5) \end{zed}
\begin{zed} 3 (+ 4 = 5) \end{zed}
\begin{zed} 3 + (4 = 5) \end{zed}
\begin{zed} 3 + 4 (= 5) \end{zed}
\begin{zed} 3 + 4 = (5) \end{zed}
\begin{zed} (\_+\_)(3, 4) = 5 \end{zed}
\begin{zed} (-) ((3) + 4) = 5 \end{zed}

\begin{zed}
	x : \nat
\end{axdef}

\begin{axdef}
	gulp: \power \nat
\end{zed}

\begin{zed}
	2 + 2 = \\
	\forall x: \nat @ x+1 > x
\end{zed}

Quantifier syntax:

\begin{zed}
	\forall x: \nat @ x > 1 \implies
		\exists y: \nat @ x < y < 2 * x
\end{zed}

A bad set expression:

\begin{zed}
	\empty = \{ foo, 2+2, x: \nat \}
\end{zed}

Bad decoration in schema def:

\begin{zed}
	SEP1a' \defs [ x: \nat ]
\end{zed}

\begin{schema}{SEP1b''}
	x: \nat
\end{schema}

\begin{zed}
	2 + 2 = 4
% \end{zed}
