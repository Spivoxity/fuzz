%
% zletter.mf
%
% This file is part of fuzz2000
% Copyright (c) 1982--2006 J. M. Spivey
% All rights reserved
%
% Redistribution and use in source and binary forms, with or without
% modification, are permitted provided that the following conditions are met:
%
% 1. Redistributions of source code must retain the above copyright notice,
%    this list of conditions and the following disclaimer.
% 2. Redistributions in binary form must reproduce the above copyright notice,
%    this list of conditions and the following disclaimer in the documentation
%    and/or other materials provided with the distribution.
% 3. The name of the author may not be used to endorse or promote products
%    derived from this software without specific prior written permission.
%
% THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
% IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
% OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
% IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
% SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
% PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
% OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
% WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
% OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
% ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
% 
% $Id: zletter.mf,v 1.2 2007-02-16 13:22:02 mike Exp $
%

iff known power: cmchar "Power set sign";
beginchar(power,11u#,cap_height#,0);
adjust_fit(0,0); pickup rule.nib; autorounded;
lft x1=hround u-eps; x2-x1=x4-x9=ceiling(.75u+rule_thickness);
x3=x5=.5w; x4=w-x1; x8=x1; x6=x7=x2; x10=x9;
top y1=h+eps; top y6=.5h; bot y7=0-eps; y2=y3=y1; y4=.5[y1,y6]; y5=y6; y8=y7;
numeric t; path p; p=z3{right}..{down}z4;
t=xpart(p intersectiontimes ((x9,y4)--(x9,h))); y9=ypart point t of p;
y9-y4=y4-y10;
draw z2--z7--z8--z1--z3{right}..z4{down}..{left}z5--z6;  % stem and bowl
draw z9--z10;  % emphasis on curve
labels(1,2,3,4,5,6,7,8,9,10); endchar;

iff known finset: cmchar "Finite set sign";
beginchar(finset,11u#,cap_height#,0);
adjust_fit(0,0); pickup rule.nib; autorounded;
lft x1=hround u-eps; x2-x1=ceiling(.75u+rule_thickness);
x3=w-x1; x6=x7=x2; x8=x1; x5=hround(w-3u)+eps;
top y1=h+eps; top y6=.5h; bot y7=0-eps; y2=y3=y1; y5=y6; y8=y7;
draw z2--z7--z8--z1--z3;  % stem and upper arm
draw z6--z5;  % middle arm
labels(1,2,3,5,6,7,8); endchar;

iff known nat: cmchar "Natural number sign";
beginchar(nat,11u#,cap_height#,0);
adjust_fit(0,0); pickup rule.nib; autorounded;
lft x1=hround u-eps; x2=x1; x5=x6=w-x1;
x4-x1=x5-x3=ceiling(u+rule_thickness);
bot y1=0-eps; top y2=h+eps; y3=y5=y1; y4=y6=y2;
draw z1--z2--z3--z5--z6;  % stems and lower diagonal
draw z2--z4--z5;  % upper diagonal
labels(1,2,3,4,5,6); endchar;

iff known zed: cmchar "Integer sign";
beginchar(zed,11u#,cap_height#,0);
adjust_fit(0,0); pickup rule.nib; autorounded;
lft x1=hround u-eps; x4=x5=x1; x2=x3=x6=w-x1;
top y1=top y2=h+eps; bot y5=bot y6=0-eps;
y2-y3=y4-y5=ceiling(1.5u+rule_thickness);
draw z1--z2--z4--z5; % upper arm and upper diagonal
draw z2--z3--z5--z6; % lower diagonal and lower arm
labels(1,2,3,4,5,6); endchar;
